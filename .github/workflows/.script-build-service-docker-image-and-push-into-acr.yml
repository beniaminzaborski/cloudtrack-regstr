on:
  workflow_call:
    inputs:
      ENVIRONMENT_TYPE:
        required: true
        type: string
      PROJECT_NAME:
        required: true
        type: string
      SERVICE_NAME:
        required: true
        type: string
      DOCKERFILE_PATH:
        required: true
        type: string
    secrets:
      AZURE_CREDENTIALS:
        required: true
      REGISTRY_LOGIN_SERVER:
        required: true
      REGISTRY_USERNAME:
        required: true
      REGISTRY_PASSWORD:
        required: true
      NUGET_PASSWORD:
        required: true

env:
  DOTNET_VERSION: 9.0.x
  NUGET_USERNAME: beniaminzaborski

jobs:
  build-service-docker-image-and-push-into-acr:
    runs-on: ubuntu-latest
    environment: ${{ inputs.ENVIRONMENT_TYPE }}
    steps:
    # Checkout the service source code from repository
    - name: Checkout
      uses: actions/checkout@v4

    # Download and install .NET SDK
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    # Run unit tests
    # - name: Tests
    #   run: dotnet test ./test/CloudTrack.Registration.Domain.UnitTests/CloudTrack.Registration.Domain.UnitTests.csproj

    # Log in to Azure for further steps
    - name: Log in to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # Determine a docker image version (as docker image tag) depends on how the workflow has been triggered
    # For trigger by push a commit then docker image tag is github sha
    # For trigger by git tag (v{major.minor.fix}) then docker image tags are: {major.minor.fix}, {major.minor}, 'latest'
    # This step sets these tags as a step output: steps.metadata.outputs.tags
    - name: Determine Docker image metadata
      id: metadata
      uses: docker/metadata-action@v5
      with:
        images: ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ inputs.PROJECT_NAME }}-${{ inputs.SERVICE_NAME }}
        tags: |
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,value={{sha}},enable=${{ github.ref_type != 'tag' }}

    # Log in to Azure Container Registry to push the docker image into it in the further step
    - name: Log in to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    # Build and push the docker image into the container registry
    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ${{ inputs.DOCKERFILE_PATH }}
        build-args: |
          NUGET_URL=${{ vars.NUGET_FEED_URL }}
          NUGET_USERNAME=${{ env.NUGET_USERNAME }}
          NUGET_PASSWORD=${{ secrets.NUGET_PASSWORD }}
        push: true
        tags: ${{ steps.metadata.outputs.tags }}
        labels: ${{ steps.metadata.outputs.labels }}
